@using HomematicCore.Manager.Web.ViewModels;

@implements IDisposable;

@if (IsDialogVisible == true)
{
    <div class="modal show " tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-scrollable bg-surface" role="document">
            <div class="modal-content bg-dp-1">
                <div class="modal-header">
                    @ModalHeader
                </div>
                <div class="modal-body">
                    @ModalContent
                </div>
                <div class="modal-footer">
                    @ModalFooter
                </div>
            </div>
        </div>
    </div>

    <div class="modal-backdrop show"></div>
}

@code 
{
    [Parameter]
    public RenderFragment ModalHeader { get; set; }
    
    [Parameter]
    public RenderFragment ModalContent { get; set; }

    [Parameter]
    public RenderFragment ModalFooter { get; set; }

    [Parameter]
    public DialogViewModelBase ViewModel { get; set; }

    public bool IsDialogVisible { get; private set; }
    
    public void Show()
    {
        IsDialogVisible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        IsDialogVisible = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        if (ViewModel != null)
        {
            ViewModel.OpenRequested -= OpenModalDialog;
            ViewModel.CloseRequested -= CloseModalDialog;
            ViewModel.PropertyChanged -= HandlePropertyChange;
        }
    }

    protected override void OnParametersSet()
    {
        if (ViewModel != null) 
        {
            ViewModel.OpenRequested += OpenModalDialog;
            ViewModel.CloseRequested += CloseModalDialog;
            ViewModel.PropertyChanged += HandlePropertyChange;
        }
    }

    private async void HandlePropertyChange(object sender, EventArgs e)
    {
        await InvokeAsync(() => StateHasChanged());
    }

    private void OpenModalDialog(object sender, EventArgs e) 
    {
        Show();
    }

    private void CloseModalDialog(object sender, EventArgs e) 
    {
        Hide();
    }
}