@using HomematicCore.Manager.Web.Components;
@using HomematicCore.Manager.Web.ViewModels;
@using HomematicCore.Homematic.Daemon.Domain;

<ModalDialog ViewModel="ViewModel">

    <ModalHeader>
        <div class="lead"> @ViewModel.ParameterSetKey (@ViewModel.Address) </div>
    </ModalHeader>
    <ModalContent>
        <form>
        @foreach (var parameter in ViewModel.Parameters)
        {
            <div class="form-group">
                <label for="@parameter.Name"> @parameter.Name </label>
                <button type = "button" class="btn btn-link pr-0 float-right" @onclick="() => ViewModel.UploadParameter(parameter)">&nbsp;<i class="fas fa-arrow-circle-up"></i></button>

                @if (parameter.ParameterType == ParameterTypes.Integer)
                {
                    <input class="form-control form-control-sm" type="number" placeholder="" id="@parameter.Name" @bind="parameter.IntValue" />
                }
                @if (parameter.ParameterType == ParameterTypes.Float)
                {
                    <input class="form-control form-control-sm" type="number" placeholder="" id="@parameter.Name" @bind="parameter.DoubleValue" />
                }
                @if (parameter.ParameterType == ParameterTypes.Enum)
                {
                    <select class="form-control form-control-sm" id="@parameter.Name" @bind="parameter.IntValue">
                        @foreach (var possibleValue in parameter.ValueList)
                        {
                            <option value="@possibleValue.Value"> @possibleValue.Key </option>
                        }
                    </select>
                }
                @if (parameter.ParameterType == ParameterTypes.Bool || parameter.ParameterType == ParameterTypes.Action)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" placeholder="" id="@parameter.Name" @bind="parameter.BoolValue" />
                        <label class="form-check-label" for="@parameter.Name">Enabled</label>
                    </div>
                }
                @if (parameter.ParameterType == ParameterTypes.String)
                {
                    <input class="form-control form-control-sm" type="text" placeholder="" id="@parameter.Name" @bind="parameter.StringValue" />
                }
                <small class="form-text text-muted">
                    Default: @parameter.DefaultValue
                </small>
            </div>
        }
        </form>
    </ModalContent>
    <ModalFooter>
        <button class="btn btn-primary btn-ripple" @onclick="_ => ViewModel.UploadParameterSet()"> Upload Set </button>
        <button class="btn btn-primary btn-ripple" @onclick="_ => ViewModel.Close()"> Close </button>
    </ModalFooter>

</ModalDialog>

@code
{
    [Parameter]
    public ParameterDialogViewModel ViewModel { get; set; }
}