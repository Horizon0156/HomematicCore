@using HomematicCore.Manager.Web.Components;
@using HomematicCore.Manager.Web.ViewModels;

@implements IDisposable

<ModalDialog @ref="_dialogReference">

    <ModalContent>
        
        <div class="container">
            <h4>@ViewModel.Address @ViewModel.ParameterSetKey</h4>
            <form>
            <fieldset>
                @foreach (var parameterSet in ViewModel.ParameterSetDescription?.Keys)
                {
                    <label for="@parameterSet">@parameterSet</label>
                    <small class="float-right"> Default: @ViewModel.ParameterSetDescription[parameterSet].DefaultValue</small>
                    <input class="small" type="text" placeholder="" id="@parameterSet" value="@ViewModel.ParameterSet.GetValue(parameterSet)?.ToString()"/>
                }
            </fieldset>
            </form>
        </div>
    </ModalContent>

    <ModalFooter>
        <a class="btn-flat" @onclick="_ => ViewModel.Close()"> Close </a>
    </ModalFooter>

</ModalDialog>

@code
{
    [Parameter]
    public ParameterDialogViewModel ViewModel { get; set; }

    private ModalDialog _dialogReference;

    public void Dispose()
    {
        ViewModel.OpenRequested -= OpenModalDialog;
        ViewModel.CloseRequested -= CloseModalDialog;
    }

    protected override void OnInitialized() 
    {
        ViewModel.OpenRequested += OpenModalDialog;
        ViewModel.CloseRequested += CloseModalDialog;
    }

    private void OpenModalDialog(object sender, EventArgs e) 
    {
        _dialogReference.Show();
    }

    private void CloseModalDialog(object sender, EventArgs e) 
    {
        _dialogReference.Hide();
    }
}